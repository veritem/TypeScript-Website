{"files":"Sertakan daftar berkas, tidak mendukung globs","extends":"Mewarisi opsi untuk TSConfig","include":"Specify a list of modules which to acquire types for.","exclude":"Specify a list of modules which to exclude from type acquisition.","references":"Menyediakan struktur untuk proyek komposit","allowUnreachableCode":"Galat ketika kode tidak akan pernah dipanggil","allowUnusedLabels":"Galat saat tidak sengaja membuat label","alwaysStrict":"Pastikan 'use strict' selalu dikeluarkan","exactOptionalPropertyTypes":"Differentiate between undefined and not present when type checking","noFallthroughCasesInSwitch":"Enable error reporting for fallthrough cases in switch statements.","noImplicitAny":"Mencegah memperkenalkan `any` didalam basis kode milikmu saat sebuah tipe bisa di tentukan","noImplicitOverride":"Ensure overriding members in derived classes are marked with an override modifier.","noImplicitReturns":"Memastikan semua jalur kode mengembalikan nilai di suatu fungsi","noImplicitThis":"Menimbulkan kesalahan-kesalahan saat 'this' menjadi bertipe any","noPropertyAccessFromIndexSignature":"Enforces using indexed accessors for keys declared using an indexed type","noUncheckedIndexedAccess":"Add `undefined` to a type when accessed using an index.","noUnusedLocals":"Enable error reporting when a local variables aren't read.","noUnusedParameters":"Raise an error when a function parameter isn't read","strict":"Enable all strict type checking options.","strictBindCallApply":"Check that the arguments for `bind`, `call`, and `apply` methods match the original function.","strictFunctionTypes":"When assigning functions, check to ensure parameters and the return values are subtype-compatible.","strictNullChecks":"When type checking, take into account `null` and `undefined`.","strictPropertyInitialization":"Check for class properties that are declared but not set in the constructor.","useUnknownInCatchVariables":"Default catch clause variables as `unknown` instead of `any`.","allowUmdGlobalAccess":"Asumsikan impor UMD tersedia secara global","baseUrl":"Tetapkan baseurl untuk nama modul relatif","module":"Specify what module code is generated.","moduleResolution":"Specify how TypeScript looks up a file from a given module specifier.","noResolve":"Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project.","paths":"Specify a set of entries that re-map imports to additional lookup locations.","resolveJsonModule":"Memperbolehkan mengimpor berkas .json","rootDir":"Menyetel direktori root di dalam berkas sumber Anda","rootDirs":"Mengatur banyak direktori root","typeRoots":"Specify multiple folders that act like `./node_modules/@types`.","types":"Digunakan untuk membuat sebuah daftar kumpulan tipe yang diizinkan untuk diikutsertakan pada kompilasi","declaration":"Emit berkas d.ts untuk berkas referensi dalam proyek","declarationDir":"Atur direktori _root_ untuk berkas d.ts yang akan dituju","declarationMap":"Buat peta sumber untuk berkas d.ts","downlevelIteration":"Menghasilkan JavaScript yang lebih sesuai, tetapi sangat rumit untuk objek iterasi","emitBOM":"Sertakan tanda urutan byte ke berkas keluaran","emitDeclarationOnly":"Hanya mengeluarkan berkas d.ts dan bukan berkas .js","importHelpers":"Izinkan mengimpor fungsi penunjang satu kali per proyek, termasuk menyertakan per-berkas","importsNotUsedAsValues":"Mengontrol sintaks yang Anda gunakan untuk mengimpor kata","inlineSourceMap":"Sertakan berkas peta sumber di dalam JavaScript","inlineSources":"Sertakan berkas peta sumber di dalam JavaScript yang tampilkan","mapRoot":"Specify the location where debugger should locate map files instead of generated locations.","newLine":"Set the newline character for emitting files.","noEmit":"Disable emitting file from a compilation.","noEmitHelpers":"Disable generating custom helper functions like `__extends` in compiled output.","noEmitOnError":"Disable emitting files if any type checking errors are reported.","outDir":"Mengatur direktori keluaran untuk semua berkas yang disertakan","outFile":"Mengeluarkan satu berkas dari semua berkas JS yang di gabungkan","preserveConstEnums":"Disable erasing `const enum` declarations in generated code.","removeComments":"Menghapus Komentar di TypeScript sehingga tidak muncul di Javascript","sourceMap":"Create source map files for emitted JavaScript files.","sourceRoot":"Specify the root path for debuggers to find the reference source code.","stripInternal":"Disable emitting declarations that have `@internal` in their JSDoc comments.","allowJs":"Izinkan TS menyertakan berkas .JS di impor","checkJs":"Jalankan tulisan checker pada .js berkas dalam proyek Anda","maxNodeModuleJsDepth":"Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`.","disableSizeLimit":"Menghapus batasan memori pada server bahasa TypeScript","plugins":"Specify a list of language service plugins to include.","allowSyntheticDefaultImports":"Izinkan 'impor x dari y' jika modul tidak memiliki setelan standar ekspor","esModuleInterop":"Menghasilkan JS tambahan untuk memudahkan dukungan untuk mengimpor modul commonjs","forceConsistentCasingInFileNames":"Pastikan jenis huruf sudah benar dalam impor","isolatedModules":"Pastikan setiap berkas dapat dilihat dengan aman tanpa bergantung pada impor lain","preserveSymlinks":"Disable resolving symlinks to their realpath. This correlates to the same flag in node.","charset":"Atur pengkodean teks secara manual untuk membaca berkas","keyofStringsOnly":"Make keyof only return strings instead of string, numbers or symbols. Legacy option.","noImplicitUseStrict":"Menonaktifkan 'use strict' dalam mengeluarkan JS","noStrictGenericChecks":"Disable strict checking of generic signatures in function types.","out":"Jangan menggunakan ini","suppressExcessPropertyErrors":"Disable reporting of excess property errors during the creation of object literals.","suppressImplicitAnyIndexErrors":"Suppress `noImplicitAny` errors when indexing objects that lack index signatures.","emitDecoratorMetadata":"Menambahkan metadata jenis tambahan ke dekorator dalam kode yang dihasilkan","experimentalDecorators":"Menyalakan dukungan eksperimental untuk decorator TC39 Tahap 2","jsx":"Mengatur bagaimana JSX dihasilkan","jsxFactory":"Mengatur fungsi yang dihasilkan oleh JSX","jsxFragmentFactory":"Menentukan pengidentifikasi fragmen JSX akan diubah seperti apa","jsxImportSource":"Specify module specifier used to import the JSX factory functions when using `jsx: react-jsx*`.`","lib":"Specify a set of bundled library declaration files that describe the target runtime environment.","noLib":"Disable including any library files, including the default lib.d.ts.","reactNamespace":"Menentukan objek yang dipanggil oleh 'createElement' di JSX","target":"Menyetel versi bahasa JavaScript untuk JavaScript yang dideklarasikan dan menyertakan deklarasi pustaka yang kompatibel.","useDefineForClassFields":"Emit ECMAScript-standard-compliant class fields.","diagnostics":"Mengeluarkan informasi tambahan setelah kompilasi","explainFiles":"Print files read during the compilation including why it was included.","extendedDiagnostics":"Menyertakan banyak diagnosa informasi setelah kompilasi","generateCpuProfile":"Keluarkan profil CPU v8 dari penyusun yang dijalankan untuk di analisa","listEmittedFiles":"Print the names of emitted files after a compilation.","listFiles":"Print all of the files read during the compilation.","traceResolution":"Log paths used during the `moduleResolution` process.","composite":"Digunakan untuk membuat banyak proyek pembangunan","disableReferencedProjectLoad":"Mengurangi jumlah proyek yang dimuat secara otomatis oleh TypeScript","disableSolutionSearching":"Memilih proyek dari pemeriksaan referensi multi-proyek","disableSourceOfProjectReferenceRedirect":"Gunakan berkas d.ts sebagai sumber kebenaran untuk perkakas antara batasan proyek gabungan","incremental":"Simpan berkas .tsbuildinfo untuk kompilasi proyek secara bertahap","tsBuildInfoFile":"Specify the folder for .tsbuildinfo incremental compilation files.","noErrorTruncation":"Disable truncating types in error messages.","preserveWatchOutput":"Disable wiping the console in watch mode","pretty":"Enable color and formatting in output to make compiler errors easier to read","skipDefaultLibCheck":"Gunakan SkipLibCheck sebagai gantinya","skipLibCheck":"Melewati pengecekan jenis berkas deklarasi","assumeChangesOnlyAffectDirectDependencies":"Opsi mode yang lebih cepat secara drastis, tetapi terkadang tidak akurat.","watchFile":"Teknik apa yang harus digunakan oleh pengamat","watchDirectory":"Menentukan bagaimana direktori-direktori diperhatikan","fallbackPolling":"Apa yang harus digunakan pengawas jika sistem kehabisan pengamat berkas asli","synchronousWatchDirectory":"Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.","excludeDirectories":"Remove a list of directories from the watch process.","excludeFiles":"Remove a list of files from the watch mode's processing.","enable":"Disable the type acquisition for JavaScript projects","disableFilenameBasedTypeAcquisition":"Disables inference for type acquisition by looking at filenames in a project."}