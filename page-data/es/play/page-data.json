{"componentChunkName":"component---src-templates-play-tsx","path":"/es/play","result":{"pageContext":{"lang":"es","examplesTOC":{"sections":[{"name":"JavaScript","id":"JavaScript","subtitle":"Descubre TypeScript mejora tu día a día con JavaScript con una sintaxis adicional mínima."},{"name":"TypeScript","id":"TypeScript","subtitle":"Explora cómo TypeScript extiende JavaScript para agregar más seguridad y herramientas."},{"name":"3.7","id":"3.7","subtitle":"Lee las <a href='https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/'> notas de lanzamiento</a>."},{"name":"3.8","id":"3.8","subtitle":"Lee las <a href='https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/'>notas de lanzamiento</a>."},{"name":"Playground V3","id":"Playground","subtitle":"Descubre lo que ha cambiado en este sitio web."}],"sortedSubSections":["JavaScript Essentials","Functions with JavaScript","Working With Classes","Modern JavaScript","External APIs","Helping with JavaScript","Primitives","Type Primitives","Meta-Types","Language","Language Extensions","Syntax and Messaging","Types and Code Flow","Fixits","Config","Tooling","Breaking Changes","JSDoc Improvements","New JS Features","New TS Features","New Checks","Template Literals"],"examples":[{"path":["3-7","Fixits"],"title":"Big number literals","name":"Big number literals.ts","lang":"en","id":"big-number-literals","sortIndex":1,"hash":"825910677db5ef34b5903dbbe9633e95","compilerSettings":{"target":99}},{"path":["3-7","Fixits"],"title":"Const to let","name":"Const to let.ts","lang":"en","id":"const-to-let","sortIndex":1,"hash":"6f3a80385d433628304c9fc65e7d3fe7","compilerSettings":{}},{"path":["3-7","Fixits"],"title":"Infer From Usage Changes","name":"Infer From Usage Changes.ts","lang":"en","id":"infer-from-usage-changes","sortIndex":2,"hash":"7c0ae1958119aadcef7cef9a9318d119","compilerSettings":{"noImplicitAny":false}},{"path":["3-7","Syntax and Messaging"],"title":"Flattened Error Reporting","name":"Flattened Error Reporting.ts","lang":"en","id":"flattened-error-reporting","sortIndex":3,"hash":"006c70a8a961fdfa4ac9d9982ac04448","compilerSettings":{}},{"path":["3-7","Syntax and Messaging"],"title":"Nullish Coalescing","name":"Nullish Coalescing.ts","lang":"en","id":"nullish-coalescing","sortIndex":2,"hash":"7baa4a458be040137e2934cf73908a98","compilerSettings":{}},{"path":["3-7","Syntax and Messaging"],"title":"Optional Chaining","name":"Optional Chaining.ts","lang":"en","id":"optional-chaining","sortIndex":1,"hash":"7c78973f566aa6991af927e05a81c805","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Assertion Functions","name":"Assertion Functions.ts","lang":"en","id":"assertion-functions","sortIndex":1,"hash":"9ceb6ca614f1b90260ca8f1d450d719e","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Recursive Type References","name":"Recursive Type References.ts","lang":"en","id":"recursive-type-references","sortIndex":2,"hash":"e6e368bb2a2d075480f3050e83042505","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Uncalled Function Checks","name":"Uncalled Function Checks.ts","lang":"en","id":"uncalled-function-checks","sortIndex":1,"hash":"5648a1d14ed70f51ae8129647b8ef8a8","compilerSettings":{}},{"path":["3-8","Breaking Changes"],"title":"Checking Unions with Index Signatures","name":"Checking Unions with Index Signatures.ts","lang":"en","id":"checking-unions-with-index-signatures","sortIndex":1,"hash":"5e5faf5d8a38e450cdc1f8216f446dc6","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","JSDoc Improvements"],"title":"Accessibility Modifiers","name":"Accessibility Modifiers.js","lang":"en","id":"accessibility-modifiers","sortIndex":1,"hash":"015e5aefe9337339cc77ce97886d0dff","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Export Modules From","name":"Export Modules From.ts","lang":"en","id":"export-modules-from","sortIndex":1,"hash":"0cec3d12aa959014ad7f2deab11aceba","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Private Class Fields","name":"Private Class Fields.ts","lang":"en","id":"private-class-fields","sortIndex":1,"hash":"007b7908b25582edf359840a8b65310f","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Type Imports","name":"Type Imports.tsx","lang":"en","id":"type-imports","sortIndex":1,"hash":"e590ddf2477795522b7cd32857cb97fd","compilerSettings":{"ts":"3.8.3"}},{"path":["4-0","New Checks"],"title":"Class Constructor Code Flow","name":"Class Constructor Code Flow.ts","lang":"en","id":"class-constructor-code-flow","sortIndex":1,"hash":"1c0fac9b9493327356874293a6a56a45","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New JS Features"],"title":"JSDoc Deprecated","name":"JSDoc Deprecated.ts","lang":"en","id":"jsdoc-deprecated","sortIndex":1,"hash":"882205414e2f4236e307a7e6b6af2780","compilerSettings":{}},{"path":["4-0","New JS Features"],"title":"Logical Operators and Assignment","name":"Logical Operators and Assignment.ts","lang":"en","id":"logical-operators-and-assignment","sortIndex":1,"hash":"0d7c067d12a3dc12a1935ef0cc7a2919","compilerSettings":{}},{"path":["4-0","New JS Features"],"title":"Nullish Coalescing","name":"Nullish Coalescing.ts","lang":"en","id":"nullish-coalescing","sortIndex":1,"hash":"25d21bca71dcdcef434b97f0a8b68689","compilerSettings":{}},{"path":["4-0","New TS Features"],"title":"Named Tuples","name":"Named Tuples.ts","lang":"en","id":"named-tuples","sortIndex":1,"hash":"566323dc57d42c4aad51d3bf69690baf","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New TS Features"],"title":"Unknown in Catch","name":"Unknown in Catch.ts","lang":"en","id":"unknown-in-catch","sortIndex":1,"hash":"61515680a8a6799d5a54679b93bd642c","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New TS Features"],"title":"Variadic Tuples","name":"Variadic Tuples.ts","lang":"en","id":"variadic-tuples","sortIndex":1,"hash":"86bb3bed74c0eb05a979ec9ef5bdf588","compilerSettings":{"ts":"4.0.2"}},{"path":["4-1","New JS Features"],"title":"New JSX Support","name":"New JSX Support.ts","lang":"en","id":"new-jsx-support","sortIndex":1,"hash":"d5a1c97efb10cc29cef11781aacd20c3","compilerSettings":{"ts":"4.1.0-dev.20201028","jsx":4}},{"path":["4-1","New JS Features"],"title":"See in JSDoc","name":"See in JSDoc.ts","lang":"en","id":"see-in-jsdoc","sortIndex":1,"hash":"6fd3a8d713ba5c129c7c04243cd15548","compilerSettings":{"ts":"4.1.0-beta"}},{"path":["4-1","Template Literals"],"title":"Intro to Template Literals","name":"Intro to Template Literals.ts","lang":"en","id":"intro-to-template-literals","sortIndex":1,"hash":"a702cc4f34f842c937b6a5953961b009","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-1","Template Literals"],"title":"Mapped Types with Template Literals","name":"Mapped Types with Template Literals.ts","lang":"en","id":"mapped-types-with-template-literals","sortIndex":1,"hash":"fe449c3d1331e06494a181ba820672bc","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-1","Template Literals"],"title":"String Manipulation with Template Literals","name":"String Manipulation with Template Literals.ts","lang":"en","id":"string-manipulation-with-template-literals","sortIndex":1,"hash":"c3d9d18098089ce72bd308e569d6ae4a","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-2","Fixits"],"title":"Create Function from Call","name":"Create Function from Call.ts","lang":"en","id":"create-function-from-call","sortIndex":1,"hash":"487a42e067cd980de0375e4000d8ecea","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Abstract Class Constructors","name":"Abstract Class Constructors.ts","lang":"en","id":"abstract-class-constructors","sortIndex":1,"hash":"54d25cbe06b6e0ee8a089bcce3740a05","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Rest Elements in Tuple Types","name":"Rest Elements in Tuple Types.ts","lang":"en","id":"rest-elements-in-tuple-types","sortIndex":1,"hash":"f0d75cf9274d37d40b24c6c6935b067a","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Smarter Type Alias Preservation","name":"Smarter Type Alias Preservation.ts","lang":"en","id":"smarter-type-alias-preservation","sortIndex":1,"hash":"9dc869de5445f8fae8b4762126a539bf","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Use Index Accessors for Index Signatures","name":"Use Index Accessors for Index Signatures.ts","lang":"en","id":"use-index-accessors-for-index-signatures","sortIndex":1,"hash":"b17655a57ea03e05cc398249afe4dc4f","compilerSettings":{"ts":"4.2.0-beta","noPropertyAccessFromIndexSignature":true}},{"path":["4-3","New TS Features"],"title":"No Implicit Class Overrides","name":"No Implicit Class Overrides.ts","lang":"en","id":"no-implicit-class-overrides","sortIndex":1,"hash":"78f3f927135716b19f8eab5b78103724","compilerSettings":{"ts":"4.3.4"}},{"path":["4-3","New TS Features"],"title":"Separate Write vs Read on Properties","name":"Separate Write vs Read on Properties.ts","lang":"en","id":"separate-write-vs-read-on-properties","sortIndex":1,"hash":"2a0d83e3767babac56fa73db8c61d7eb","compilerSettings":{"ts":"4.3.4"}},{"path":["4-4","New JS Features"],"title":"Control Flow Improvements","name":"Control Flow Improvements.ts","lang":"en","id":"control-flow-improvements","sortIndex":1,"hash":"89e84eae89ff824720113b149ede2651","compilerSettings":{"ts":"4.4.2"}},{"path":["4-4","New JS Features"],"title":"Errors for High Confidence Errors","name":"Errors for High Confidence Errors.ts","lang":"en","id":"errors-for-high-confidence-errors","sortIndex":1,"hash":"5f43cace57d96a03e56cf4106a2b5401","compilerSettings":{"ts":"4.4.2","useJavaScript":true,"checkJS":false}},{"path":["4-4","New TS Features"],"title":"Exact Optional Properties","name":"Exact Optional Properties.ts","lang":"en","id":"exact-optional-properties","sortIndex":1,"hash":"30de307ca7a47ba3e17c79aed44bdfec","compilerSettings":{"ts":"4.4.2","exactOptionalPropertyTypes":true}},{"path":["4-4","New TS Features"],"title":"Use unknown for Catch Variables","name":"Use unknown for Catch Variables.ts","lang":"en","id":"use-unknown-for-catch-variables","sortIndex":1,"hash":"4dd1acc37f8381c89a65e3a73a8e599d","compilerSettings":{"ts":"4.4.2","useUnknownInCatchVariables":true}},{"path":["JavaScript","External APIs"],"title":"TypeScript con Deno","name":"TypeScript with Deno.ts","lang":"es","id":"typescript-with-deno","sortIndex":3,"hash":"a291571c01634f94b387c3116b070099"},{"path":["JavaScript","External APIs"],"title":"TypeScript con Node","name":"TypeScript with Node.js","lang":"es","id":"typescript-with-node","sortIndex":3,"hash":"d613bbc0fc82f088375b193d25ff52f0"},{"path":["JavaScript","External APIs"],"title":"TypeScript with React","name":"TypeScript with React.tsx","lang":"en","id":"typescript-with-react","sortIndex":2,"hash":"d32a619b99421aa7c9bf81b47a584fff","compilerSettings":{"jsx":2,"esModuleInterop":true}},{"path":["JavaScript","External APIs"],"title":"TypeScript con la Web","name":"TypeScript with Web.js","lang":"es","id":"typescript-with-web","sortIndex":1,"hash":"bac3a28d68c1bfd67eeb3d4b28a62bfc"},{"path":["JavaScript","External APIs"],"title":"TypeScript with WebGL","name":"TypeScript with WebGL.js","lang":"en","id":"typescript-with-webgl","sortIndex":5,"hash":"1924981198d44c66d1b70365f7bf64a5"},{"path":["JavaScript","Functions with JavaScript"],"title":"Encadenamiento de funciones","name":"Function Chaining.ts","lang":"es","id":"function-chaining","sortIndex":2,"hash":"7896fa3893ab8c0fdbb2d363beee214d","compilerSettings":{"esModuleInterop":true}},{"path":["JavaScript","Functions with JavaScript"],"title":"Funciones genéricas","name":"Generic Functions.ts","lang":"es","id":"generic-functions","sortIndex":1,"hash":"901657e476be6edae1cbf2c217df11b1"},{"path":["JavaScript","Functions with JavaScript"],"title":"Typing Functions","name":"Typing Functions.ts","lang":"en","id":"typing-functions","sortIndex":1,"hash":"1fcf279cc44359488c1080d4c89a21c7","compilerSettings":{}},{"path":["JavaScript","Helping with JavaScript"],"title":"Errors","name":"Errors.ts","lang":"en","id":"errors","sortIndex":3,"hash":"a8002c1590daaa3e8de9a64bb700fab6"},{"path":["JavaScript","Helping with JavaScript"],"title":"Quick Fixes","name":"Quick Fixes.ts","lang":"en","id":"quick-fixes","sortIndex":1,"hash":"6a3b23a7a0b59f35a275a22ac3c26caa","compilerSettings":{}},{"path":["JavaScript","JavaScript Essentials"],"title":"Code Flow","name":"Code Flow.ts","lang":"en","id":"code-flow","sortIndex":3,"hash":"9ae5b97b721d9c0ba93af3bd1ee7d31b","compilerSettings":{"strictNullChecks":true}},{"path":["JavaScript","JavaScript Essentials"],"title":"Functions","name":"Functions.ts","lang":"en","id":"functions","sortIndex":2,"hash":"ae890345afc3df359caafe86c2b84dde","compilerSettings":{"noImplicitAny":false}},{"path":["JavaScript","JavaScript Essentials"],"title":"Hola Mundo","name":"Hello World.ts","lang":"es","id":"hello-world","sortIndex":1,"hash":"632d40224f972bd06d8367f61b0e5021","compilerSettings":{"target":1}},{"path":["JavaScript","JavaScript Essentials"],"title":"Objetos y arreglos","name":"Objects and Arrays.ts","lang":"es","id":"objects-and-arrays","sortIndex":1,"hash":"551956af99715a55c7242079d6f0f901","compilerSettings":{"strict":false}},{"path":["JavaScript","Modern JavaScript"],"title":"Async Await","name":"Async Await.ts","lang":"en","id":"async-await","sortIndex":1,"hash":"1566feca03a4b78acde37b0938744bfb"},{"path":["JavaScript","Modern JavaScript"],"title":"Immutability","name":"Immutability.ts","lang":"en","id":"immutability","sortIndex":1,"hash":"3d4a9eb8140b978d5a2038b229ed7358","compilerSettings":{}},{"path":["JavaScript","Modern JavaScript"],"title":"Import Export","name":"Import Export.ts","lang":"en","id":"import-export","sortIndex":1,"hash":"20540aaa5529590a7994ee0ea8e2ef46"},{"path":["JavaScript","Modern JavaScript"],"title":"JSDoc Support","name":"JSDoc Support.js","lang":"en","id":"jsdoc-support","sortIndex":3,"hash":"6d49c5c5529742c4e79cd356aa20da28"},{"path":["JavaScript","Working With Classes"],"title":"Classes 101","name":"Classes 101.ts","lang":"en","id":"classes-101","sortIndex":1,"hash":"f8fb270601471de56c437ed3a08771fd"},{"path":["JavaScript","Working With Classes"],"title":"Generic Classes","name":"Generic Classes.ts","lang":"en","id":"generic-classes","sortIndex":3,"hash":"fc4bdd9cb8eb5f55b4f2139adb0c73d5"},{"path":["JavaScript","Working With Classes"],"title":"Mixins","name":"Mixins.ts","lang":"en","id":"mixins","sortIndex":4,"hash":"9585388ab95b974dbcd87d1f1a82e712"},{"path":["JavaScript","Working With Classes"],"title":"This","name":"This.ts","lang":"en","id":"this","sortIndex":2,"hash":"591560f285cca99ba2fbabe023d39b1d"},{"path":["Playground","Config"],"title":"JavaScript Playgrounds","name":"JavaScript Playgrounds.js","lang":"en","id":"javascript-playgrounds","sortIndex":3,"hash":"2ee4201455d66dd6019ae713ddffd685"},{"path":["Playground","Config"],"title":"New Compiler Defaults","name":"New Compiler Defaults.ts","lang":"en","id":"new-compiler-defaults","sortIndex":1,"hash":"f3473b83d37581743fa71313d56624d7"},{"path":["Playground","Language"],"title":"Automatic Type Acquisition","name":"Automatic Type Acquisition.ts","lang":"en","id":"automatic-type-acquisition","sortIndex":1,"hash":"f1000ade89e47d459fc53029b59cb844","compilerSettings":{}},{"path":["Playground","Language"],"title":"Fixits","name":"Fixits.ts","lang":"en","id":"fixits","sortIndex":1,"hash":"1c24830951754d4fca1237bbe9672b1a","compilerSettings":{}},{"path":["Playground","Tooling"],"title":"Mobile Support","name":"Mobile Support.ts","lang":"en","id":"mobile-support","sortIndex":99,"hash":"dc9d34849197ad69472b94af0eeb84ec"},{"path":["Playground","Tooling"],"title":"Sharable URLs","name":"Sharable URLs.ts","lang":"en","id":"sharable-urls","sortIndex":1,"hash":"14ce23fb4c12857c8bdb0ef876400428"},{"path":["Playground","Tooling"],"title":"TypeScript Versions","name":"TypeScript Versions.ts","lang":"en","id":"typescript-versions","sortIndex":1,"hash":"c8eff2d0d97ab930482b8ed6609e40e0","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Soundness","name":"Soundness.ts","lang":"es","id":"soundness","sortIndex":1,"hash":"1ec670d1ad1bbad3966eb417ca1ab7bd","compilerSettings":{"strictFunctionTypes":false}},{"path":["TypeScript","Language"],"title":"Structural Typing","name":"Structural Typing.ts","lang":"es","id":"structural-typing","sortIndex":1,"hash":"06cb96f2cd997e4dcadf07b10b6550c6","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Type Guards","name":"Type Guards.ts","lang":"es","id":"type-guards","sortIndex":1,"hash":"9561e53e96716216863e32f3e29e84f8","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Type Widening and Narrowing","name":"Type Widening and Narrowing.ts","lang":"es","id":"type-widening-and-narrowing","sortIndex":1,"hash":"b391dbf20c53f3218aab5ab51f8e9e2b","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Enums","name":"Enums.ts","lang":"en","id":"enums","sortIndex":1,"hash":"3f9d750a80f2e4a837a325e5a7c5d0c8","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Nominal Typing","name":"Nominal Typing.ts","lang":"en","id":"nominal-typing","sortIndex":1,"hash":"1edad64b06370725278ec304bd076339","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Types vs Interfaces","name":"Types vs Interfaces.ts","lang":"en","id":"types-vs-interfaces","sortIndex":1,"hash":"0ad4d11b7ff81f93c103c255f29ae752","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Conditional Types","name":"Conditional Types.ts","lang":"es","id":"conditional-types","sortIndex":1,"hash":"a92d2fa59baa526814caab13582548f5","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Discriminate Types","name":"Discriminate Types.ts","lang":"es","id":"discriminate-types","sortIndex":1,"hash":"88c3f7629845035028240c04a1ea3569","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Indexed Types","name":"Indexed Types.ts","lang":"es","id":"indexed-types","sortIndex":1,"hash":"fb26b132ac66d1228bde51711e0554de","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Mapped Types","name":"Mapped Types.ts","lang":"es","id":"mapped-types","sortIndex":1,"hash":"c4ff40e69226fe3b4937dad527ca14c3","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Any","name":"Any.ts","lang":"es","id":"any","sortIndex":1,"hash":"a4dc41fd3430e2c0b96473c14ff8153b","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Literales","name":"Literals.ts","lang":"es","id":"literals","sortIndex":1,"hash":"11f3905f36bb77ba45ccf10068bed964"},{"path":["TypeScript","Primitives"],"title":"Tipos Unión e Intersección","name":"Union and Intersection Types.ts","lang":"es","id":"union-and-intersection-types","sortIndex":1,"hash":"540c9d35b2dde33749e2d1ff42a2599a"},{"path":["TypeScript","Primitives"],"title":"Unknown y Never","name":"Unknown and Never.ts","lang":"es","id":"unknown-and-never","sortIndex":1,"hash":"123ce3c03be6b696928f509c00881d2e"},{"path":["TypeScript","Type Primitives"],"title":"Built-in Utility Types","name":"Built-in Utility Types.ts","lang":"es","id":"built-in-utility-types","sortIndex":3,"hash":"4a343341d658e5b021cedb6ec224d100","compilerSettings":{"strictNullChecks":true}},{"path":["TypeScript","Type Primitives"],"title":"Tipos Anulables","name":"Nullable Types.ts","lang":"es","id":"nullable-types","sortIndex":3,"hash":"c3d2d9c003d93fa0d59e550ac1bc9cde","compilerSettings":{"strictNullChecks":false}},{"path":["TypeScript","Type Primitives"],"title":"Tuples","name":"Tuples.ts","lang":"es","id":"tuples","sortIndex":1,"hash":"e7597fc7564d0364a003d9866bec566f","compilerSettings":{}}]},"optionsSummary":[{"id":"files","display":"Files","oneliner":"Include a list of files. This does not support glob patterns, as opposed to `include`.","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"extends","display":"Extends","oneliner":"Specify one or more path or node module references to base configuration files from which settings are inherited.","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"include","display":"Include","oneliner":"Specify a list of glob patterns that match files to be included in compilation.","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"exclude","display":"Exclude","oneliner":"Filters results from the `include` option.","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"references","display":"References","oneliner":"Specify an array of objects that specify paths for projects. Used in project references.","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"allowUnreachableCode","display":"Permitir código inalcanzable","oneliner":"Muestra un error cuando el código nunca será ejecutado","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"allowUnusedLabels","display":"Permite notaciones sin utilizar","oneliner":"Muestra un error cuando accidentalmente se crea una notación","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"alwaysStrict","display":"Siempre estricto","oneliner":"Asegura que 'use strict' siempre sea emitido","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"exactOptionalPropertyTypes","display":"exactOptionalPropertyTypes","oneliner":"Differentiate between undefined and not present when type checking","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noFallthroughCasesInSwitch","display":"No Fallthrough Cases In Switch","oneliner":"Enable error reporting for fallthrough cases in switch statements.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitAny","display":"No Implicit Any","oneliner":"Enable error reporting for expressions and declarations with an implied `any` type..","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitOverride","display":"noImplicitOverride","oneliner":"Ensure overriding members in derived classes are marked with an override modifier.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitReturns","display":"No Implicit Returns","oneliner":"Enable error reporting for codepaths that do not explicitly return in a function.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitThis","display":"No Implicit This","oneliner":"Enable error reporting when `this` is given the type `any`.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noPropertyAccessFromIndexSignature","display":"noPropertyAccessFromIndexSignature","oneliner":"Enforces using indexed accessors for keys declared using an indexed type","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUncheckedIndexedAccess","display":"noUncheckedIndexedAccess","oneliner":"Add `undefined` to a type when accessed using an index.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUnusedLocals","display":"No Unused Locals","oneliner":"Enable error reporting when a local variables aren't read.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUnusedParameters","display":"No Unused Parameters","oneliner":"Raise an error when a function parameter isn't read","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strict","display":"Strict","oneliner":"Enable all strict type checking options.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictBindCallApply","display":"Strict Bind Call Apply","oneliner":"Check that the arguments for `bind`, `call`, and `apply` methods match the original function.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictFunctionTypes","display":"Strict Function Types","oneliner":"When assigning functions, check to ensure parameters and the return values are subtype-compatible.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictNullChecks","display":"Strict Null Checks","oneliner":"When type checking, take into account `null` and `undefined`.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictPropertyInitialization","display":"Strict Property Initialization","oneliner":"Check for class properties that are declared but not set in the constructor.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"useUnknownInCatchVariables","display":"useUnknownInCatchVariables","oneliner":"Default catch clause variables as `unknown` instead of `any`.","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"allowUmdGlobalAccess","display":"Permitir el acceso global a UMD","oneliner":"Asume todas las importaciones UMD como disponibles globalmente","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"baseUrl","display":"URL Base","oneliner":"Configura una URL base para los nombres de los módulos relativos","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"module","display":"Module","oneliner":"Specify what module code is generated.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"moduleResolution","display":"Module Resolution","oneliner":"Specify how TypeScript looks up a file from a given module specifier.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"noResolve","display":"No Resolve","oneliner":"Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"paths","display":"Paths","oneliner":"Specify a set of entries that re-map imports to additional lookup locations.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"resolveJsonModule","display":"Resolve JSON Module","oneliner":"Enable importing .json files","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"rootDir","display":"Root Dir","oneliner":"Specify the root folder within your source files.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"rootDirs","display":"Root Dirs","oneliner":"Allow multiple folders to be treated as one when resolving modules.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"typeRoots","display":"Type Roots","oneliner":"Specify multiple folders that act like `./node_modules/@types`.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"types","display":"Types","oneliner":"Specify type package names to be included without being referenced in a source file.","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"declaration","display":"Declaration","oneliner":"Genera los archivos .d.ts de TypeScript y JavaScript en tu proyecto.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"declarationDir","display":"Declaration Dir","oneliner":"Especifica el directorio de salida para archivos de declaración generados.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"declarationMap","display":"Declaration Map","oneliner":"Crea un mapa de fuente para archivos d.ts","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"downlevelIteration","display":"Downlevel Iteration","oneliner":"Emit more compliant, but verbose and less performant JavaScript for iteration.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"emitBOM","display":"Emit BOM","oneliner":"Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"emitDeclarationOnly","display":"Emit Declaration Only","oneliner":"Only output d.ts files and not JavaScript files.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"importHelpers","display":"Import Helpers","oneliner":"Allow importing helper functions from tslib once per project, instead of including them per-file.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"importsNotUsedAsValues","display":"Imports Not Used As Values","oneliner":"Specify emit/checking behavior for imports that are only used for types.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"inlineSourceMap","display":"Inline Source Map","oneliner":"Include sourcemap files inside the emitted JavaScript.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"inlineSources","display":"Inline Sources","oneliner":"Include source code in the sourcemaps inside the emitted JavaScript.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"mapRoot","display":"Map Root","oneliner":"Specify the location where debugger should locate map files instead of generated locations.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"newLine","display":"New Line","oneliner":"Set the newline character for emitting files.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmit","display":"No Emit","oneliner":"Disable emitting file from a compilation.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmitHelpers","display":"No Emit Helpers","oneliner":"Disable generating custom helper functions like `__extends` in compiled output.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmitOnError","display":"No Emit On Error","oneliner":"Disable emitting files if any type checking errors are reported.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"outDir","display":"Out Dir","oneliner":"Specify an output folder for all emitted files.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"outFile","display":"Out File","oneliner":"Specify a file that bundles all outputs into one JavaScript file. If `declaration` is true, also designates a file that bundles all .d.ts output.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"preserveConstEnums","display":"Preserve Const Enums","oneliner":"Disable erasing `const enum` declarations in generated code.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"removeComments","display":"Remove Comments","oneliner":"Disable emitting comments.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"sourceMap","display":"Source Map","oneliner":"Create source map files for emitted JavaScript files.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"sourceRoot","display":"Source Root","oneliner":"Specify the root path for debuggers to find the reference source code.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"stripInternal","display":"Strip Internal","oneliner":"Disable emitting declarations that have `@internal` in their JSDoc comments.","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"allowJs","display":"Permitir JS","oneliner":"Permite incluir archivos .JS en las importaciones de archivos TypeScript.","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"checkJs","display":"Check JS","oneliner":"Permite el reporte de errores en archivos con extensión de JavaScript","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"maxNodeModuleJsDepth","display":"Max Node Module JS Depth","oneliner":"Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`.","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"disableSizeLimit","display":"Disable Size Limit","oneliner":"Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.","categoryID":"Editor_Support_6249","categoryDisplay":"Editor Support"},{"id":"plugins","display":"Plugins","oneliner":"Specify a list of language service plugins to include.","categoryID":"Editor_Support_6249","categoryDisplay":"Editor Support"},{"id":"allowSyntheticDefaultImports","display":"Permitir las importaciones sintéticas por defecto","oneliner":"Permite 'import x from y' cuando un módulo no tiene una exportación por defecto","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"esModuleInterop","display":"ES Module Interop","oneliner":"Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility.","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"forceConsistentCasingInFileNames","display":"Force Consistent Casing In File Names","oneliner":"Ensure that casing is correct in imports.","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"isolatedModules","display":"Isolated Modules","oneliner":"Ensure that each file can be safely transpiled without relying on other imports.","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"preserveSymlinks","display":"Preserve Symlinks","oneliner":"Disable resolving symlinks to their realpath. This correlates to the same flag in node.","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"charset","display":"Charset","oneliner":"Sin soporte. En versiones anteriores, manualmente guarda la codificación del texto para leer archivos.","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"keyofStringsOnly","display":"Keyof Strings Only","oneliner":"Make keyof only return strings instead of string, numbers or symbols. Legacy option.","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"noImplicitUseStrict","display":"No Implicit Use Strict","oneliner":"Disable adding 'use strict' directives in emitted JavaScript files.","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"noStrictGenericChecks","display":"No Strict Generic Checks","oneliner":"Disable strict checking of generic signatures in function types.","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"out","display":"Out","oneliner":"Deprecated setting. Use `outFile` instead.","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"suppressExcessPropertyErrors","display":"Suppress Excess Property Errors","oneliner":"Disable reporting of excess property errors during the creation of object literals.","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"suppressImplicitAnyIndexErrors","display":"Suppress Implicit Any Index Errors","oneliner":"Suppress `noImplicitAny` errors when indexing objects that lack index signatures.","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"emitDecoratorMetadata","display":"Emit Decorator Metadata","oneliner":"Emit design-type metadata for decorated declarations in source files.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"experimentalDecorators","display":"Experimental Decorators","oneliner":"Enable experimental support for TC39 stage 2 draft decorators.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsx","display":"JSX","oneliner":"Specify what JSX code is generated.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxFactory","display":"JSX Factory","oneliner":"Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxFragmentFactory","display":"jsxFragmentFactory","oneliner":"Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxImportSource","display":"jsxImportSource","oneliner":"Specify module specifier used to import the JSX factory functions when using `jsx: react-jsx*`.`","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"lib","display":"Lib","oneliner":"Specify a set of bundled library declaration files that describe the target runtime environment.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"noLib","display":"No Lib","oneliner":"Disable including any library files, including the default lib.d.ts.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"reactNamespace","display":"React Namespace","oneliner":"Specify the object invoked for `createElement`. This only applies when targeting `react` JSX emit.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"target","display":"Target","oneliner":"Set the JavaScript language version for emitted JavaScript and include compatible library declarations.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"useDefineForClassFields","display":"Use Define For Class Fields","oneliner":"Emit ECMAScript-standard-compliant class fields.","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"diagnostics","display":"Diagnostics","oneliner":"Información de rendimiento del compilador después de haber compilado.","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"explainFiles","display":"explainFiles","oneliner":"Print files read during the compilation including why it was included.","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"extendedDiagnostics","display":"Extended Diagnostics","oneliner":"Output more detailed compiler performance information after building.","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"generateCpuProfile","display":"Generate CPU Profile","oneliner":"Emit a v8 CPU profile of the compiler run for debugging.","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"listEmittedFiles","display":"List Emitted Files","oneliner":"Print the names of emitted files after a compilation.","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"listFiles","display":"List Files","oneliner":"Print all of the files read during the compilation.","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"traceResolution","display":"Trace Resolution","oneliner":"Log paths used during the `moduleResolution` process.","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"composite","display":"Composite","oneliner":"Habilita restricciones que permiten a un proyecto de TypeScript ser usado con referencias de proyectos.","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableReferencedProjectLoad","display":"disableReferencedProjectLoad","oneliner":"Reduce the number of projects loaded automatically by TypeScript.","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableSolutionSearching","display":"Disable Solution Searching","oneliner":"Opt a project out of multi-project reference checking when editing.","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableSourceOfProjectReferenceRedirect","display":"Disable Source Project Reference Redirect","oneliner":"Disable preferring source files instead of declaration files when referencing composite projects","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"incremental","display":"Incremental","oneliner":"Save .tsbuildinfo files to allow for incremental compilation of projects.","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"tsBuildInfoFile","display":"TS Build Info File","oneliner":"Specify the folder for .tsbuildinfo incremental compilation files.","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"noErrorTruncation","display":"No Error Truncation","oneliner":"Disable truncating types in error messages.","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"preserveWatchOutput","display":"Preserve Watch Output","oneliner":"Disable wiping the console in watch mode","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"pretty","display":"Pretty","oneliner":"Enable color and formatting in output to make compiler errors easier to read","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"skipDefaultLibCheck","display":"Skip Default Lib Check","oneliner":"Skip type checking .d.ts files that are included with TypeScript.","categoryID":"Completeness_6257","categoryDisplay":"Completeness"},{"id":"skipLibCheck","display":"Skip Lib Check","oneliner":"Skip type checking all .d.ts files.","categoryID":"Completeness_6257","categoryDisplay":"Completeness"},{"id":"assumeChangesOnlyAffectDirectDependencies","display":"Asume que los cambios sólo afectan a las dependencias directas","oneliner":"Una opción de modo de vigilancia drásticamente más rápida, pero ocasionalmente inexacta.","categoryID":"Watch_and_Build_Modes_6250","categoryDisplay":"Opciones de Vigilancia"},{"id":"watchFile","display":"watchFile","oneliner":"Specify how the TypeScript watch mode works.","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"watchDirectory","display":"watchDirectory","oneliner":"Specify how directories are watched on systems that lack recursive file-watching functionality.","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"fallbackPolling","display":"fallbackPolling","oneliner":"Specify what approach the watcher should use if the system runs out of native file watchers.","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"synchronousWatchDirectory","display":"synchronousWatchDirectory","oneliner":"Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"excludeDirectories","display":"excludeDirectories","oneliner":"Remove a list of directories from the watch process.","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"excludeFiles","display":"excludeFiles","oneliner":"Remove a list of files from the watch mode's processing.","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"enable","display":"enable","oneliner":"Disable the type acquisition for JavaScript projects","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"include","display":"Include","oneliner":"Specify a list of modules which to acquire types for.","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"exclude","display":"Exclude","oneliner":"Specify a list of modules which to exclude from type acquisition.","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"disableFilenameBasedTypeAcquisition","display":"disableFilenameBasedTypeAcquisition","oneliner":"Disables inference for type acquisition by looking at filenames in a project.","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"}]}},"staticQueryHashes":[]}